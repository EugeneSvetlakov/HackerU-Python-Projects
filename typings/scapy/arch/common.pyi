"""
This type stub file was generated by pyright.
"""

import scapy
from scapy.consts import WINDOWS
from scapy.interfaces import NetworkInterface
from scapy.libs.structures import bpf_program
from scapy.compat import Optional, Tuple, Union

"""
Functions common to different architectures
"""
if notWINDOWS:
    ...
_iff_flags = ...
def get_if(iff: Union[NetworkInterface, str], cmd: int) -> bytes:
    """Ease SIOCGIF* ioctl calls"""
    ...

def get_if_raw_hwaddr(iff: Union[NetworkInterface, str], siocgifhwaddr: Optional[int] = ...) -> Tuple[int, bytes]:
    """Get the raw MAC address of a local interface.

    This function uses SIOCGIFHWADDR calls, therefore only works
    on some distros.

    :param iff: the network interface name as a string
    :returns: the corresponding raw MAC address
    """
    ...

def compile_filter(filter_exp: str, iface: Optional[Union[str, scapy.interfaces.NetworkInterface]] = ..., linktype: Optional[int] = ..., promisc: bool = ...) -> bpf_program:
    """Asks libpcap to parse the filter, then build the matching
    BPF bytecode.

    :param iface: if provided, use the interface to compile
    :param linktype: if provided, use the linktype to compile
    """
    ...

