"""
This type stub file was generated by pyright.
"""

import code
from scapy.error import Scapy_Exception

"""
Run commands when the Scapy interpreter starts.
"""
class StopAutorun(Scapy_Exception):
    code_run = ...


class ScapyAutorunInterpreter(code.InteractiveInterpreter):
    def __init__(self, *args, **kargs) -> None:
        ...
    
    def showsyntaxerror(self, *args, **kargs): # -> None:
        ...
    
    def showtraceback(self, *args, **kargs): # -> None:
        ...
    


def autorun_commands(cmds, my_globals=..., ignore_globals=..., verb=...):
    ...

class StringWriter:
    """Util to mock sys.stdout and sys.stderr, and
    store their output in a 's' var."""
    def __init__(self, debug=...) -> None:
        ...
    
    def write(self, x): # -> None:
        ...
    
    def flush(self): # -> None:
        ...
    


def autorun_get_interactive_session(cmds, **kargs): # -> tuple[str, Unknown | Literal[0]]:
    """Create an interactive session and execute the
    commands passed as "cmds" and return all output

    :param cmds: a list of commands to run
    :returns: (output, returned) contains both sys.stdout and sys.stderr logs
    """
    ...

def autorun_get_interactive_live_session(cmds, **kargs): # -> tuple[str, Unknown | Literal[0]]:
    """Create an interactive session and execute the
    commands passed as "cmds" and return all output

    :param cmds: a list of commands to run
    :returns: (output, returned) contains both sys.stdout and sys.stderr logs
    """
    ...

def autorun_get_text_interactive_session(cmds, **kargs): # -> tuple[str, Unknown | Literal[0]]:
    ...

def autorun_get_live_interactive_session(cmds, **kargs): # -> tuple[str, Unknown | Literal[0]]:
    ...

def autorun_get_ansi_interactive_session(cmds, **kargs): # -> tuple[str, Unknown | Literal[0]]:
    ...

def autorun_get_html_interactive_session(cmds, **kargs): # -> tuple[Unknown, Unknown | Literal[0]]:
    ...

def autorun_get_latex_interactive_session(cmds, **kargs): # -> tuple[str, Unknown | Literal[0]]:
    ...

